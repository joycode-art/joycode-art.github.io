<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JoyCode: A Hardcore Software Consultancy | JoyCode</title>
    <link>https://joycode-art.github.io/</link>
    <description>Recent content on JoyCode: A Hardcore Software Consultancy | JoyCode</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Designed By [JoyCode](https://joycode.art/)</copyright>
    <lastBuildDate>Sat, 14 Mar 2020 15:40:24 +0600</lastBuildDate><atom:link href="https://joycode-art.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Clean C&#43;&#43;: 应用「准关键字」定义抽象接口</title>
      <link>https://joycode-art.github.io/blog/post-2/</link>
      <pubDate>Sat, 14 Mar 2020 15:40:24 +0600</pubDate>
      
      <guid>https://joycode-art.github.io/blog/post-2/</guid>
      <description>There are two ways of constructing a software design. One way is to make it so simple that there are obviously no deficiencies.</description>
    </item>
    
    <item>
      <title>实现模式</title>
      <link>https://joycode-art.github.io/blog/post-5/</link>
      <pubDate>Sat, 14 Mar 2020 15:40:24 +0600</pubDate>
      
      <guid>https://joycode-art.github.io/blog/post-5/</guid>
      <description>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nec et ipsum ullamcorper venenatis fringilla.</description>
    </item>
    
    <item>
      <title>开发者测试</title>
      <link>https://joycode-art.github.io/blog/post-6/</link>
      <pubDate>Sat, 14 Mar 2020 15:40:24 +0600</pubDate>
      
      <guid>https://joycode-art.github.io/blog/post-6/</guid>
      <description>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nec et ipsum ullamcorper venenatis fringilla.</description>
    </item>
    
    <item>
      <title>开发者测试: 实现BDD测试框架(JSpec)</title>
      <link>https://joycode-art.github.io/blog/post-1/</link>
      <pubDate>Sat, 14 Mar 2020 15:40:24 +0600</pubDate>
      
      <guid>https://joycode-art.github.io/blog/post-1/</guid>
      <description>There are two ways of constructing a software design. One way is to make it so simple that there are obviously no deficiencies.</description>
    </item>
    
    <item>
      <title>测试驱动开发</title>
      <link>https://joycode-art.github.io/blog/post-4/</link>
      <pubDate>Sat, 14 Mar 2020 15:40:24 +0600</pubDate>
      
      <guid>https://joycode-art.github.io/blog/post-4/</guid>
      <description>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nec et ipsum ullamcorper venenatis fringilla.</description>
    </item>
    
    <item>
      <title>重构</title>
      <link>https://joycode-art.github.io/blog/post-3/</link>
      <pubDate>Sat, 14 Mar 2020 15:40:24 +0600</pubDate>
      
      <guid>https://joycode-art.github.io/blog/post-3/</guid>
      <description>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nec et ipsum ullamcorper venenatis fringilla.</description>
    </item>
    
    <item>
      <title>Full-Stack Designer</title>
      <link>https://joycode-art.github.io/career/job-4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://joycode-art.github.io/career/job-4/</guid>
      <description>About Copper At Copper, we want to make your neighborhood a little more familiar.</description>
    </item>
    
    <item>
      <title>Full-Stack Engineer</title>
      <link>https://joycode-art.github.io/career/job-6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://joycode-art.github.io/career/job-6/</guid>
      <description>About Copper At Copper, we want to make your neighborhood a little more familiar.</description>
    </item>
    
    <item>
      <title>Head Design</title>
      <link>https://joycode-art.github.io/career/job-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://joycode-art.github.io/career/job-2/</guid>
      <description>About Copper At Copper, we want to make your neighborhood a little more familiar.</description>
    </item>
    
    <item>
      <title>Java Developer</title>
      <link>https://joycode-art.github.io/career/job-3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://joycode-art.github.io/career/job-3/</guid>
      <description>About Copper At Copper, we want to make your neighborhood a little more familiar.</description>
    </item>
    
    <item>
      <title>Laravel Developer</title>
      <link>https://joycode-art.github.io/career/job-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://joycode-art.github.io/career/job-1/</guid>
      <description>About Copper At Copper, we want to make your neighborhood a little more familiar.</description>
    </item>
    
    <item>
      <title>Lead Product Designer</title>
      <link>https://joycode-art.github.io/career/job-5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://joycode-art.github.io/career/job-5/</guid>
      <description>About Copper At Copper, we want to make your neighborhood a little more familiar.</description>
    </item>
    
    <item>
      <title>个人介绍</title>
      <link>https://joycode-art.github.io/team/01-wangbo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://joycode-art.github.io/team/01-wangbo/</guid>
      <description></description>
    </item>
    
    <item>
      <title>个人介绍</title>
      <link>https://joycode-art.github.io/team/02-liuguangcong/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://joycode-art.github.io/team/02-liuguangcong/</guid>
      <description>概况介绍 软件技术咨询师，全栈程序员，专注于大型系统软件的领域建模设计、组件化与服务化架构演进、遗留系统重构与开发者测试等领域。拥有10多年大型电信软件系统的工作和咨询经验，在大型嵌入式软件平台、无线4G/5G业务软件、机器学习计算平台等相关领域提供技术咨询服务。曾作为“2016全球C++及系统软件大会”，“2017全球机器学习大会”，“2019全球C++软件技术大会”，“2020全球C++软件技术大会”主题讲师。拥有开源著作《TensorFlow内核剖析》一部，Google认证的机器学习GDE技术专家。          咨询案例 全球知名电信设备制造商：新一代无线RRU软件平台的架构演进咨询项目 作为技术咨询师，全力参与新一代无线RRU软件平台的架构演进过程，通过领域模型的演进式设计方法，有效解决业务深层的复杂度，并通过模型有效表达架构意图和业务逻辑，有效协同多个异地并行开发。</description>
    </item>
    
    <item>
      <title>个人介绍</title>
      <link>https://joycode-art.github.io/team/03-weigangqiang/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://joycode-art.github.io/team/03-weigangqiang/</guid>
      <description></description>
    </item>
    
    <item>
      <title>个人介绍</title>
      <link>https://joycode-art.github.io/team/04-zhangchao/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://joycode-art.github.io/team/04-zhangchao/</guid>
      <description></description>
    </item>
    
    <item>
      <title>智能与数据工程</title>
      <link>https://joycode-art.github.io/solution/05-ai/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://joycode-art.github.io/solution/05-ai/</guid>
      <description>AI芯片 在计算机工程中，计算机体系结构是描述计算机系统功能，组织和实现的一组规则和方法。它主要包括指令集、内存管理、I/O 和总线结构。</description>
    </item>
    
    <item>
      <title>硬核技术</title>
      <link>https://joycode-art.github.io/solution/01-hardcore-tech/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://joycode-art.github.io/solution/01-hardcore-tech/</guid>
      <description>操作系统 在计算机工程中，计算机体系结构是描述计算机系统功能，组织和实现的一组规则和方法。它主要包括指令集、内存管理、I/O 和总线结构。</description>
    </item>
    
    <item>
      <title>系统工程效率</title>
      <link>https://joycode-art.github.io/solution/03-efficiency/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://joycode-art.github.io/solution/03-efficiency/</guid>
      <description>DevOps原则 在计算机工程中，计算机体系结构是描述计算机系统功能，组织和实现的一组规则和方法。它主要包括指令集、内存管理、I/O 和总线结构。</description>
    </item>
    
    <item>
      <title>系统性能工程</title>
      <link>https://joycode-art.github.io/solution/02-system-perf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://joycode-art.github.io/solution/02-system-perf/</guid>
      <description>性能模型 在计算机工程中，计算机体系结构是描述计算机系统功能，组织和实现的一组规则和方法。它主要包括指令集、内存管理、I/O 和总线结构。</description>
    </item>
    
    <item>
      <title>软件架构优化</title>
      <link>https://joycode-art.github.io/solution/04-soft-arch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://joycode-art.github.io/solution/04-soft-arch/</guid>
      <description>架构风格 在计算机工程中，计算机体系结构是描述计算机系统功能，组织和实现的一组规则和方法。它主要包括指令集、内存管理、I/O 和总线结构。</description>
    </item>
    
  </channel>
</rss>
